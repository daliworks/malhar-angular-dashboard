"use strict";angular.module("ui.dashboard",["ui.bootstrap","ui.sortable"]),angular.module("ui.dashboard").directive("dashboard",["WidgetModel","WidgetDefCollection","$uibModal","DashboardState","$log",function(t,e,n,i,a){return{restrict:"A",templateUrl:function(t,e){return e.templateUrl?e.templateUrl:"components/directives/dashboard/dashboard.html"},scope:!0,controller:["$scope",function(t){t.sortableDefaults={stop:function(){t.saveDashboard()},update:function(){t.updateDashboard()},handle:".widget-header",distance:5}}],link:function(s,o,d){function l(t){s.options=t,s.options.settingsModalOptions=s.options.settingsModalOptions||{},_.each(["settingsModalOptions"],function(t){s.options[t]=s.options[t]||{},_.defaults(s.options[t],g[t])}),_.defaults(s.options,g),s.sortableOptions=angular.extend({},s.sortableDefaults,s.options.sortableOptions||{}),s.defaultWidgets=s.options.defaultWidgets,s.widgetDefs=new e(s.options.widgetDefinitions),s.dashboardState=new i(s.options.storage,s.options.storageId,s.options.storageHash,s.widgetDefs,s.options.stringifyStorage)}function r(t){s.options.unsavedChangeCount=0,t&&t.length?s.loadWidgets(t):s.defaultWidgets?s.loadWidgets(s.defaultWidgets):s.clear(!0)}var g={stringifyStorage:!0,hideWidgetSettings:!1,hideWidgetClose:!1,settingsModalOptions:{templateUrl:"components/directives/dashboard/widget-settings-template.html",controller:"WidgetSettingsCtrl"},onSettingsClose:function(t,e){jQuery.extend(!0,e,t)},onSettingsDismiss:function(t){a.info("widget settings were dismissed. Reason: ",t)}},u=1;s.addWidget=function(e,n){"string"==typeof e&&(e={name:e});var i=s.widgetDefs.getByName(e.name);if(!i)throw"Widget "+e.name+" is not found.";e.title||i.title||(e.title="Widget "+u++);var a=new t(i,e);return s.widgets.push(a),n||s.saveDashboard(),a},s.removeWidget=function(t){s.widgets.splice(_.indexOf(s.widgets,t),1),s.saveDashboard(),s.$emit("widgetRemoved",t)},s.openWidgetSettings=function(t){var e=_.defaults({scope:s},t.settingsModalOptions,s.options.settingsModalOptions);e.resolve={widget:function(){return t},optionsTemplateUrl:function(){return t.optionsTemplateUrl||s.options.optionsTemplateUrl}};var i=n.open(e),a=t.onSettingsClose||s.options.onSettingsClose,o=t.onSettingsDismiss||s.options.onSettingsDismiss;i.result.then(function(e){a(e,t,s),s.$emit("widgetChanged",t)},function(t){o(t,s)})},s.clear=function(t){s.widgets=[],t!==!0&&s.saveDashboard()},s.addWidgetInternal=function(t,e){t.preventDefault(),s.addWidget(e)},s.saveDashboard=function(t){s.options.explicitSave?(angular.isNumber(s.options.unsavedChangeCount)||(s.options.unsavedChangeCount=0),t?(s.options.unsavedChangeCount=0,s.dashboardState.save(s.widgets)):++s.options.unsavedChangeCount):s.dashboardState.save(s.widgets)},s.updateDashboard=function(){s.$emit("sortupdate")},s.externalSaveDashboard=function(t){s.saveDashboard(angular.isDefined(t)?t:!0)},s.loadWidgets=function(t){s.savedWidgetDefs=t,s.clear(!0),_.each(t,function(t){s.addWidget(t,!0)})},s.resetWidgetsToDefault=function(){s.loadWidgets(s.defaultWidgets),s.saveDashboard()},s.getWidgets=function(){return s.widgets},s.$parent.$watch(d.options,function(t){if(t){l(t);var e=s.dashboardState.load();angular.isArray(e)?r(e):e&&angular.isObject(e)&&angular.isFunction(e.then)?e.then(r,r):r(),s.options.addWidget=s.addWidget,s.options.loadWidgets=s.loadWidgets,s.options.saveDashboard=s.externalSaveDashboard,s.options.removeWidget=s.removeWidget,s.options.openWidgetSettings=s.openWidgetSettings,s.options.getWidgets=s.getWidgets,s.options.clearWidgets=s.clear,s.$emit("dashboardReady")}}),s.$on("widgetChanged",function(){s.saveDashboard()})}}}]),angular.module("ui.dashboard").run(["$templateCache",function(t){t.put("components/directives/dashboard/altDashboard.html",'<div>\n    <div class="btn-toolbar" ng-if="!options.hideToolbar">\n        <div class="btn-group" ng-if="!options.widgetButtons">\n            <span class="dropdown" on-toggle="toggled(open)">\n              <button type="button" class="btn btn-primary dropdown-toggle" ng-disabled="disabled">\n                Button dropdown <span class="caret"></span>\n              </button>\n              <ul class="dropdown-menu" role="menu">\n                <li ng-repeat="widget in widgetDefs">\n                  <a href="#" ng-click="addWidgetInternal($event, widget);" class="dropdown-toggle">{{widget.name}}</a>\n                </li>\n              </ul>\n            </span>\n        </div>\n\n        <div class="btn-group" ng-if="options.widgetButtons">\n            <button ng-repeat="widget in widgetDefs"\n                    ng-click="addWidgetInternal($event, widget);" type="button" class="btn btn-primary">\n                {{widget.name}}\n            </button>\n        </div>\n\n        <button class="btn btn-warning" ng-click="resetWidgetsToDefault()">Default Widgets</button>\n\n        <button ng-if="options.storage && options.explicitSave" ng-click="options.saveDashboard()" class="btn btn-success" ng-hide="!options.unsavedChangeCount">{{ !options.unsavedChangeCount ? "Alternative - No Changes" : "Save" }}</button>\n\n        <button ng-click="clear();" ng-hide="!widgets.length" type="button" class="btn btn-info">Clear</button>\n    </div>\n\n    <div ui-sortable="sortableOptions" ng-model="widgets" class="dashboard-widget-area">\n        <div ng-repeat="widget in widgets" ng-style="widget.style" class="widget-container" widget>\n            <div class="widget panel panel-default">\n                <div class="widget-header panel-heading">\n                    <h3 class="panel-title">\n                        <span class="widget-title" ng-dblclick="editTitle(widget)" ng-hide="widget.editingTitle">{{widget.title}}</span>\n                        <form action="" class="widget-title" ng-show="widget.editingTitle" ng-submit="saveTitleEdit(widget)">\n                            <input type="text" ng-model="widget.title" class="form-control">\n                        </form>\n                        <span class="label label-primary" ng-if="!options.hideWidgetName">{{widget.name}}</span>\n                        <span ng-click="removeWidget(widget);" class="glyphicon glyphicon-remove" ng-if="!options.hideWidgetClose"></span>\n                        <span ng-click="openWidgetSettings(widget);" class="glyphicon glyphicon-cog" ng-if="!options.hideWidgetSettings"></span>\n                    </h3>\n                </div>\n                <div class="panel-body widget-content"></div>\n                <div class="widget-ew-resizer" ng-mousedown="grabResizer($event)"></div>\n            </div>\n        </div>\n    </div>\n</div>\n'),t.put("components/directives/dashboard/dashboard.html",'<div>\n    <div class="btn-toolbar" ng-if="!options.hideToolbar">\n        <div class="btn-group" ng-if="!options.widgetButtons">\n            <span class="dropdown" on-toggle="toggled(open)">\n              <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                Button dropdown <span class="caret"></span>\n              </button>\n            <ul class="dropdown-menu" role="menu">\n                <li ng-repeat="widget in widgetDefs">\n                  <a href="#" ng-click="addWidgetInternal($event, widget);" class="dropdown-toggle"><span class="label label-primary">{{widget.name}}</span></a>\n                </li>\n            </ul>\n            </span>\n        </div>\n        <div class="btn-group" ng-if="options.widgetButtons">\n            <button ng-repeat="widget in widgetDefs"\n                    ng-click="addWidgetInternal($event, widget);" type="button" class="btn btn-primary">\n                {{widget.name}}\n            </button>\n        </div>\n\n        <button class="btn btn-warning" ng-click="resetWidgetsToDefault()">Default Widgets</button>\n\n        <button ng-if="options.storage && options.explicitSave" ng-click="options.saveDashboard()" class="btn btn-success" ng-disabled="!options.unsavedChangeCount">{{ !options.unsavedChangeCount ? "all saved" : "save changes (" + options.unsavedChangeCount + ")" }}</button>\n\n        <button ng-click="clear();" type="button" class="btn btn-info">Clear</button>\n    </div>\n\n    <div ui-sortable="sortableOptions" ng-model="widgets" class="dashboard-widget-area">\n        <div ng-repeat="widget in widgets" ng-style="widget.containerStyle" class="widget-container col-xs-12 col-sm-6 col-md-4" widget>\n            <div class="widget panel panel-default">\n                <div class="widget-header panel-heading">\n                    <h3 class="panel-title">\n                        <span class="widget-title" ng-dblclick="editTitle(widget)" ng-hide="widget.editingTitle">{{widget.title}}</span>\n                        <form action="" class="widget-title" ng-show="widget.editingTitle" ng-submit="saveTitleEdit(widget)">\n                            <input type="text" ng-model="widget.title" class="form-control">\n                        </form>\n                        <span class="label label-primary" ng-if="!options.hideWidgetName">{{widget.name}}</span>\n                        <span ng-click="removeWidget(widget);" class="glyphicon glyphicon-remove" ng-if="!options.hideWidgetClose"></span>\n                        <span ng-click="openWidgetSettings(widget);" class="glyphicon glyphicon-cog" ng-if="!options.hideWidgetSettings"></span>\n                        <span ng-click="widget.contentStyle.display = widget.contentStyle.display === \'none\' ? \'block\' : \'none\'" class="glyphicon" ng-class="{\'glyphicon-plus\': widget.contentStyle.display === \'none\', \'glyphicon-minus\': widget.contentStyle.display !== \'none\' }"></span>\n                    </h3>\n                </div>\n                <div class="panel-body widget-content" ng-style="widget.contentStyle"></div>\n                <div class="widget-ew-resizer" ng-mousedown="grabResizer($event)"></div>\n                <div ng-if="widget.enableVerticalResize" class="widget-s-resizer" ng-mousedown="grabSouthResizer($event)"></div>\n            </div>\n        </div>\n    </div>\n</div>'),t.put("components/directives/dashboard/widget-settings-template.html",'<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="cancel()">&times;</button>\n  <h3>Widget Options <small>{{widget.title}}</small></h3>\n</div>\n\n<div class="modal-body">\n    <form name="form" novalidate class="form-horizontal">\n        <div class="form-group">\n            <label for="widgetTitle" class="col-sm-2 control-label">Title</label>\n            <div class="col-sm-10">\n                <input type="text" class="form-control" name="widgetTitle" ng-model="result.title">\n            </div>\n        </div>\n        <div ng-if="widget.settingsModalOptions.partialTemplateUrl"\n             ng-include="widget.settingsModalOptions.partialTemplateUrl"></div>\n    </form>\n</div>\n\n<div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="cancel()">Cancel</button>\n    <button type="button" class="btn btn-primary" ng-click="ok()">OK</button>\n</div>'),t.put("components/directives/dashboardLayouts/SaveChangesModal.html",'<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="cancel()">&times;</button>\n  <h3>Unsaved Changes to "{{layout.title}}"</h3>\n</div>\n\n<div class="modal-body">\n    <p>You have {{layout.dashboard.unsavedChangeCount}} unsaved changes on this dashboard. Would you like to save them?</p>\n</div>\n\n<div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="cancel()">Don\'t Save</button>\n    <button type="button" class="btn btn-primary" ng-click="ok()">Save</button>\n</div>'),t.put("components/directives/dashboardLayouts/dashboardLayouts.html",'<ul ui-sortable="sortableOptions" ng-model="layouts" class="nav nav-tabs layout-tabs">\n    <li ng-repeat="layout in layouts" ng-class="{ active: layout.active }">\n        <a ng-click="makeLayoutActive(layout)">\n            <span ng-dblclick="editTitle(layout)" ng-show="!layout.editingTitle">{{layout.title}}</span>\n            <form action="" class="layout-title" ng-show="layout.editingTitle" ng-submit="saveTitleEdit(layout)">\n                <input type="text" ng-model="layout.title" class="form-control" data-layout="{{layout.id}}">\n            </form>\n            <span ng-if="!layout.locked" ng-click="removeLayout(layout)" class="glyphicon glyphicon-remove remove-layout-icon"></span>\n            <!-- <span class="glyphicon glyphicon-pencil"></span> -->\n            <!-- <span class="glyphicon glyphicon-remove"></span> -->\n        </a>\n    </li>\n    <li>\n        <a ng-click="createNewLayout()">\n            <span class="glyphicon glyphicon-plus"></span>\n        </a>\n    </li>\n</ul>\n<div ng-repeat="layout in layouts | filter:isActive" dashboard options="layout.dashboard" template-url="components/directives/dashboard/dashboard.html"></div>')}]),angular.module("ui.dashboard").directive("widget",["$injector",function(t){return{controller:"DashboardWidgetCtrl",link:function(e){var n=e.widget,i=n.dataModelType;if(i){var a;if(angular.isFunction(i))a=i;else{if(!angular.isString(i))throw new Error("widget dataModelType should be function or string");t.invoke([i,function(t){a=t}])}var s;s=n.dataModelArgs?new a(n.dataModelArgs):new a,n.dataModel=s,s.setup(n,e),s.init(),e.$on("$destroy",_.bind(s.destroy,s))}e.compileTemplate(),e.$emit("widgetAdded",n)}}}]),angular.module("ui.dashboard").controller("DashboardWidgetCtrl",["$scope","$element","$compile","$window","$timeout",function(t,e,n,i,a){t.status={isopen:!1},t.makeTemplateString=function(){var e=t.widget,n="";return e.templateUrl?n="<div ng-include=\"'"+e.templateUrl+"'\"></div>":e.template?n=e.template:(n="<div "+e.directive,e.dataAttrName&&(e.attrs=e.attrs||{},e.attrs[e.dataAttrName]="widgetData"),e.attrs&&(e.attrs[e.directive]&&(n+='="'+e.attrs[e.directive]+'"'),_.each(e.attrs,function(t,i){i!==e.directive&&(n+=" "+i+'="'+t+'"')})),n+="></div>"),n},t.grabResizer=function(n){var a=t.widget,s=e.find(".widget");if(1===n.which){n.stopPropagation(),n.originalEvent.preventDefault();var o=n.clientX,d=s.width(),l=s.height(),r=a.containerStyle.width,g=a.widthUnits,u=parseFloat(r),c=angular.element('<div class="widget-resizer-marquee" style="height: '+l+"px; width: "+d+'px;"></div>');s.append(c);var h=u/d,p=function(t){var e=t.clientX,n=e-o,i=d+n;c.css("width",i+"px")},f=function(e){jQuery(i).off("mousemove",p),c.remove();var n=e.clientX,s=n-o,d=Math.round(s*h*100)/100,l=1*u+d;a.setWidth(l,g),t.$emit("widgetChanged",a),t.$apply(),t.$broadcast("widgetResized",{width:l})};jQuery(i).on("mousemove",p).one("mouseup",f)}},t.grabSouthResizer=function(n){var a=e.find(".widget");if(1===n.which){n.stopPropagation(),n.originalEvent.preventDefault();var s=n.clientY,o=a.width(),d=a.height(),l=angular.element('<div class="widget-resizer-marquee" style="height: '+d+"px; width: "+o+'px;"></div>');a.append(l);var r=function(t){var e=t.clientY,n=e-s,i=d+n;l.css("height",i+"px")},g=function(e){jQuery(i).off("mousemove",r),l.remove();var n=e.clientY,o=n-s,d=a.find(".widget-content"),g=o,u=parseInt(d.css("height"),10),c=u+g;t.widget.setHeight(c+"px"),t.$emit("widgetChanged",t.widget),t.$apply(),t.$broadcast("widgetResized",{height:c})};jQuery(i).on("mousemove",r).one("mouseup",g)}},t.editTitle=function(t){var n=e.find(".widget");t.editingTitle=!0,a(function(){n.find("form.widget-title input:eq(0)").focus()[0].setSelectionRange(0,9999)})},t.saveTitleEdit=function(e){e.editingTitle=!1,t.$emit("widgetChanged",e)},t.compileTemplate=function(){var i=t.findWidgetContainer(e),a=t.makeTemplateString(),s=angular.element(a);i.empty(),i.append(s),n(s)(t)},t.findWidgetContainer=function(t){return t.find(".widget-content")}}]),angular.module("ui.dashboard").directive("dashboardLayouts",["LayoutStorage","$timeout","$uibModal",function(t,e,n){return{scope:!0,templateUrl:function(t,e){return e.templateUrl?e.templateUrl:"components/directives/dashboardLayouts/dashboardLayouts.html"},link:function(i,a,s){i.options=i.$eval(s.dashboardLayouts);var o=new t(i.options);i.layouts=o.layouts,i.createNewLayout=function(){var t={title:"Custom",defaultWidgets:i.options.defaultWidgets||[]};return o.add(t),i.makeLayoutActive(t),o.save(),t},i.removeLayout=function(t){o.remove(t),o.save()},i.makeLayoutActive=function(t){var e=o.getActiveLayout();if(e&&e.dashboard.unsavedChangeCount){var a=n.open({templateUrl:"template/SaveChangesModal.html",resolve:{layout:function(){return t}},controller:"SaveChangesModalCtrl"});a.result.then(function(){e.dashboard.saveDashboard(),i._makeLayoutActive(t)},function(){i._makeLayoutActive(t)})}else i._makeLayoutActive(t)},i._makeLayoutActive=function(t){angular.forEach(i.layouts,function(e){e.active=e!==t?!1:!0}),o.save()},i.isActive=function(t){return!!t.active},i.editTitle=function(t){if(!t.locked){var n=a.find('input[data-layout="'+t.id+'"]');t.editingTitle=!0,e(function(){n.focus()[0].setSelectionRange(0,9999)})}},i.saveTitleEdit=function(t){t.editingTitle=!1,o.save()},i.options.saveLayouts=function(){o.save(!0)},i.options.addWidget=function(){var t=o.getActiveLayout();t&&t.dashboard.addWidget.apply(t.dashboard,arguments)},i.options.loadWidgets=function(){var t=o.getActiveLayout();t&&t.dashboard.loadWidgets.apply(t.dashboard,arguments)},i.options.saveDashboard=function(){var t=o.getActiveLayout();t&&t.dashboard.saveDashboard.apply(t.dashboard,arguments)};var d={stop:function(){i.options.saveLayouts()},distance:5};i.sortableOptions=angular.extend({},d,i.options.sortableOptions||{})}}}]),angular.module("ui.dashboard").controller("SaveChangesModalCtrl",["$scope","$uibModalInstance","layout",function(t,e,n){t.layout=n,t.ok=function(){e.close()},t.cancel=function(){e.dismiss()}}]),angular.module("ui.dashboard").controller("WidgetSettingsCtrl",["$scope","$uibModalInstance","widget",function(t,e,n){t.widget=n,t.result=jQuery.extend(!0,{},n),t.ok=function(){e.close(t.result)},t.cancel=function(){e.dismiss("cancel")}}]),angular.module("ui.dashboard").factory("WidgetModel",["$log",function(t){function e(){return{title:"Widget",style:{},size:{},enableVerticalResize:!0,containerStyle:{width:"33%"},contentStyle:{}}}function n(t,n){angular.extend(this,e(),_.merge(angular.copy(t),n)),this.updateContainerStyle(this.style),this.templateUrl||this.template||this.directive||(this.directive=t.name),this.size&&_.has(this.size,"height")&&this.setHeight(this.size.height),this.style&&_.has(this.style,"width")&&this.setWidth(this.style.width),this.size&&_.has(this.size,"width")&&this.setWidth(this.size.width)}return n.prototype={setWidth:function(e,n){return"none"===e?(this.containerStyle.width=e,this.updateSize(this.containerStyle),!0):(e=e.toString(),n=n||e.replace(/^[-\.\d]+/,"")||"%",this.widthUnits=n,e=parseFloat(e),0>e||isNaN(e)?(t.warn("malhar-angular-dashboard: setWidth was called when width was "+e),!1):("%"===n&&(e=Math.min(100,e),e=Math.max(0,e)),this.containerStyle.width=e+""+n,this.updateSize(this.containerStyle),!0))},setHeight:function(t){this.contentStyle.height=t,this.updateSize(this.contentStyle)},setStyle:function(t){this.style=t,this.updateContainerStyle(t)},updateSize:function(t){angular.extend(this.size,t)},updateContainerStyle:function(t){angular.extend(this.containerStyle,t)},serialize:function(){return _.pick(this,["title","name","style","size","dataModelOptions","attrs","storageHash"])}},n}]),angular.module("ui.dashboard").factory("WidgetDefCollection",function(){function t(t){return"function"==typeof t?new t:t}function e(e){e=e.map(t),this.push.apply(this,e);var n={};_.each(e,function(t){n[t.name]=t}),this.map=n}return e.prototype=Object.create(Array.prototype),e.prototype.getByName=function(t){return this.map[t]},e.prototype.add=function(e){e=t(e),this.push(e),this.map[e.name]=e},e}),angular.module("ui.dashboard").factory("WidgetDataModel",function(){function t(){}return t.prototype={setup:function(t,e){this.dataAttrName=t.dataAttrName,this.dataModelOptions=t.dataModelOptions,this.widgetScope=e},updateScope:function(t){this.widgetScope.widgetData=t},init:function(){},destroy:function(){}},t}),angular.module("ui.dashboard").factory("LayoutStorage",function(){function t(t){var n={storage:e,storageHash:"",stringifyStorage:!0};angular.extend(n,t),angular.extend(t,n),this.id=t.storageId,this.storage=t.storage,this.storageHash=t.storageHash,this.stringifyStorage=t.stringifyStorage,this.widgetDefinitions=t.widgetDefinitions,this.defaultLayouts=t.defaultLayouts,this.lockDefaultLayouts=t.lockDefaultLayouts,this.widgetButtons=t.widgetButtons,this.explicitSave=t.explicitSave,this.defaultWidgets=t.defaultWidgets,this.settingsModalOptions=t.settingsModalOptions,this.onSettingsClose=t.onSettingsClose,this.onSettingsDismiss=t.onSettingsDismiss,this.options=t,this.options.unsavedChangeCount=0,this.layouts=[],this.states={},this.load(),this._ensureActiveLayout()}var e={setItem:function(){},getItem:function(){},removeItem:function(){}};return t.prototype={add:function(t){angular.isArray(t)||(t=[t]);var e=this;angular.forEach(t,function(t){t.dashboard=t.dashboard||{},t.dashboard.storage=e,t.dashboard.storageId=t.id=e._getLayoutId.call(e,t),t.dashboard.widgetDefinitions=t.widgetDefinitions||e.widgetDefinitions,t.dashboard.stringifyStorage=!1,t.dashboard.defaultWidgets=t.defaultWidgets||e.defaultWidgets,t.dashboard.widgetButtons=e.widgetButtons,t.dashboard.explicitSave=e.explicitSave,t.dashboard.settingsModalOptions=e.settingsModalOptions,t.dashboard.onSettingsClose=e.onSettingsClose,t.dashboard.onSettingsDismiss=e.onSettingsDismiss,e.layouts.push(t)})},remove:function(t){var e=this.layouts.indexOf(t);if(e>=0&&(this.layouts.splice(e,1),delete this.states[t.id],t.active&&this.layouts.length)){var n=e>0?e-1:0;this.layouts[n].active=!0}},save:function(){var t={layouts:this._serializeLayouts(),states:this.states,storageHash:this.storageHash};this.stringifyStorage&&(t=JSON.stringify(t)),this.storage.setItem(this.id,t),this.options.unsavedChangeCount=0},load:function(){var t=this.storage.getItem(this.id);this.clear(),t?angular.isObject(t)&&angular.isFunction(t.then)?this._handleAsyncLoad(t):this._handleSyncLoad(t):this._addDefaultLayouts()},clear:function(){this.layouts=[],this.states={}},setItem:function(t,e){this.states[t]=e,this.save()},getItem:function(t){return this.states[t]},removeItem:function(t){delete this.states[t],this.save()},getActiveLayout:function(){for(var t=this.layouts.length,e=0;t>e;e++){var n=this.layouts[e];if(n.active)return n}return!1},_addDefaultLayouts:function(){var t=this,e=this.lockDefaultLayouts?{locked:!0}:{};angular.forEach(this.defaultLayouts,function(n){t.add(angular.extend(_.clone(e),n))})},_serializeLayouts:function(){var t=[];return angular.forEach(this.layouts,function(e){t.push({title:e.title,id:e.id,active:e.active,locked:e.locked,defaultWidgets:e.dashboard.defaultWidgets})}),t},_handleSyncLoad:function(t){var e;if(this.stringifyStorage)try{e=JSON.parse(t)}catch(n){return void this._addDefaultLayouts()}else e=t;return this.storageHash!==e.storageHash?void this._addDefaultLayouts():(this.states=e.states,void this.add(e.layouts))},_handleAsyncLoad:function(t){var e=this;t.then(angular.bind(e,this._handleSyncLoad),angular.bind(e,this._addDefaultLayouts))},_ensureActiveLayout:function(){for(var t=0;t<this.layouts.length;t++){var e=this.layouts[t];if(e.active)return}this.layouts[0]&&(this.layouts[0].active=!0)},_getLayoutId:function(t){if(t.id)return t.id;for(var e=0,n=0;n<this.layouts.length;n++){var i=this.layouts[n].id;e=Math.max(e,1*i)}return e+1}},t}),angular.module("ui.dashboard").factory("DashboardState",["$log","$q",function(t,e){function n(t,e,n,i,a){this.storage=t,this.id=e,this.hash=n,this.widgetDefinitions=i,this.stringify=a}return n.prototype={save:function(t){if(!this.storage)return!0;var e=_.map(t,function(t){return t.serialize()}),n={widgets:e,hash:this.hash};return this.stringify&&(n=JSON.stringify(n)),this.storage.setItem(this.id,n),!0},load:function(){if(!this.storage)return null;var t;return t=this.storage.getItem(this.id),t?angular.isObject(t)&&angular.isFunction(t.then)?this._handleAsyncLoad(t):this._handleSyncLoad(t):null},_handleSyncLoad:function(e){var n,i=[];if(!e)return null;if(this.stringify)try{n=JSON.parse(e)}catch(a){return t.warn("Serialized dashboard state was malformed and could not be parsed: ",e),null}else n=e;if(n.hash!==this.hash)return t.info("Serialized dashboard from storage was stale (old hash: "+n.hash+", new hash: "+this.hash+")"),this.storage.removeItem(this.id),null;for(var s=n.widgets,o=0;o<s.length;o++){var d=s[o],l=this.widgetDefinitions.getByName(d.name);l?l.hasOwnProperty("storageHash")&&l.storageHash!==d.storageHash?t.info('Widget Definition Object with name "'+d.name+'" was found but the storageHash property on the widget definition is different from that on the serialized widget loaded from storage. hash from storage: "'+d.storageHash+'", hash from WDO: "'+l.storageHash+'"'):i.push(d):t.warn('Widget with name "'+d.name+'" was not found in given widget definition objects')}return i},_handleAsyncLoad:function(t){var n=this,i=e.defer();return t.then(function(t){var e=n._handleSyncLoad(t);e?i.resolve(e):i.reject(e)},function(t){i.reject(t)}),i.promise}},n}]);